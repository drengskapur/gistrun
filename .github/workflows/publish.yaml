name: Publish to PyPI

"on":
  workflow_dispatch:  # Manual trigger

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: hatch run test -vv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      id: bump_version
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        PRERELEASE: true

    - name: Update __about__.py file
      run: |
        sed -i "s/__version__ = .*/__version__ = \"${{ steps.bump_version.outputs.new_tag }}\"/" src/gistrun/__about__.py

    - name: Commit and push changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions Bot"
        git add src/gistrun/__about__.py
        git commit -m "Bump version to ${{ steps.bump_version.outputs.new_tag }}"
        git push -u origin master

  publish:
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build package
        run: |
          pip install --upgrade pip
          pip install hatch
          hatch build

      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
